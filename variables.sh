#!/bin/bash

# Last update: 2021-04-15
# Creates all environment variables necessary to manage the site's servers
# For general info about enviroment variables, see this article:
# https://medium.com/chingu/an-introduction-to-environment-variables-and-how-to-use-them-f602f66d15fa
# Flags:
#   -r Remove aliases instead of setting

HERE=`dirname $0`
source "$HERE/formatting.sh"

COMPONENT="Environment variables"
REMOVE=false
FILE_PATH="/etc/environment"

while getopts ":r" opt; do
    case ${opt} in
        r )
            REMOVE=true
        ;;
        \? ) 
            echo "Handles $COMPONENT setup"
            echo "Usage: cmd [-u]"
            exit 1
        ;;
    esac
done

declare -a vars=("WEBSITE_NAME" 
                "PACKAGE_ROOT"
                "PACKAGE_URL"
                "PACKAGE_NAME"
                "ADMIN_EMAIL"
                "ADMIN_PASSWORD"
                "FLASK_APP"
                "DB_NAME"
                "DB_PASSWORD"
                "DB_USER"
                "COOKIE_SECRET"
                "PHONE_NUMBER"
                "TWILIO_ACCOUNT_SID"
                "TWILIO_AUTH_TOKEN"
                "AFA_EMAIL_USERNAME"
                "AFA_EMAIL_FROM"
                "AFA_EMAIL_PASSWORD"
                )

# Removes all instances of an environment variable
# Params:
#   1) The variable name
removeVar() {
    # Remove existing matching lines
    grep -vwE "^$1=" $FILE_PATH > $FILE_PATH
}

# Sets an environment variable. If variable already exists,
# it is replaced with the new value
# Params:
#   1) The variable name
#   2) The variable value
setVar() {
    removeVar $1
    # Add new line
    echo "$1=\"$2\"" >> $ENV_PATH
}

# Helper method for prompting environment variables
prompt() {
    read -p "Enter $1: " VALUE
    setVar $1 $VALUE
}

add() {
    group "Setting $COMPONENT"
    i=0

    info "${var[$i]} is the website's url, EXCEPT for the www."
    info "Example: newlifenurseryinc.com"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is used to start the project."
    info "Examples: ~, ~/Documents/Web\ Projects"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is used to download the project's source code."
    info "Example: https://github.com/MattHalloran/NLN.git"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} should match the repository name"
    info "Example: NLN"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is the email that will be associated with the website's admin account"
    info "Example: youremailhere@gmail.com"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is the password that will be associated with the website's admin account"
    info "This can be anything, but it is recommended to use a password generator."
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} allows Flask to locate the Python file containing route endpoints."
    info "This must match the path supplied in the backend's config.py file."
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is the name of the PostgreSQL database."
    info "This must follow PostgreSQL's database naming rules"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is required for connecting to the PostgreSQL database."
    info "This can be anything, but it is recommended to use a password generator."
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is also required for connecting to the PostgreSQL database."
    info "This must match the name supplied in the backend's config.py file."
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is required for authenticating user's session tokens, which allows users to stay logged in for a certain period of time."
    info "This can be anything, but is is recommended to use a password generator."
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is the phone number that text messages will be sent from."
    info "Please include the country code. Here is an example: +15558675309"
    info "If you do not plan on sending text messages, this can be ignored."
    prompt ${var[$i]}
    ((i=i+1))

    info "Twilio is a cloud communications service."
    info "It is a great tool for sending text messages to users."
    info "If you do not want to set up Twilio, you can leave the following Twilio variables blank."
    info "${var[$i]} is an account identifier generated by Twilio. It can be found at twilio.com/console"
    prompt ${var[$i]}
    ((i=i+1))

    info "${var[$i]} is an API key generated by Twilio, which can also be found at twilio.com/console"
    prompt ${var[$i]}
    ((i=i+1))

    prompt ${var[$i]}
    ((i=i+1))

    prompt ${var[$i]}
    ((i=i+1))

    prompt ${var[$i]}
    ((i=i+1))

    success "Set $COMPONENT. These will not go into effect until you log out and in"
}

remove() {
    group "Removing $COMPONENT"
    for i in "${var[@]}"
    do
        info "Removing $i"
        removeVar "$i"
    done
    success "Removed $COMPONENT"
}

if $REMOVE; then
    add
else
    remove
fi
